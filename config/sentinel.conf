# *** IMPORTANT ***
port 26379

# 哨兵sentinel的工作目录  
dir ./

# master-name:mymaster  服务器名称(自定义)
# ip:127.0.0.1          master主服务器
# redis-port:6379       master端口
# quorum:1              代表只有两个或两个以上的哨兵认为主服务器不可用的时候
sentinel monitor mymaster 192.168.50.201 6379 1

# 当在Redis实例中开启了requirepass foobared 授权密码 这样所有连接Redis实例的客户端都要提供密码  
# 设置哨兵sentinel 连接主从的密码 注意必须为主从设置一样的验证密码  
# sentinel auth-pass mymaster MySUPER--secret-0123passw0rd
sentinel down-after-milliseconds mymaster 30000

# 这个配置项指定了在发生failover主备切换时最多可以有多少个slave同时对新的master进行同步，
# 这个数字越小，完成failover所需的时间就越长，但是如果这个数字越大，就意味着越多的slave因为replication而不可用。
# 可以通过将这个值设为 1 来保证每次只有一个slave 处于不能处理命令请求的状态。
sentinel parallel-syncs mymaster 1

# 同一个sentinel对同一个master两次failover之间的间隔时间
# 当一个slave从一个错误的master那里同步数据开始计算时间。直到slave被纠正为向正确的master那里同步数据时
# 当想要取消一个正在进行的failover所需要的时间
# 当进行failover时，配置所有slaves指向新的master所需的最大时间。
# 不过，即使过了这个超时，slaves依然会被正确配置为指向master，但是就不按parallel-syncs所配置的规则来了
sentinel failover-timeout mymaster 180000

# sentinel notification-script mymaster /var/redis/notify.sh

# sentinel client-reconfig-script mymaster /var/redis/reconfig.sh

sentinel deny-scripts-reconfig yes

cluster-enabled yes
cluster-config-file nodes-201-sentinel-001.conf
cluster-node-timeout 5000
appendonly yes