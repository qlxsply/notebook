操作系统：deepin-15.10
mysql版本：mysql-5.7.26

1.配置文件
vim ./my.cnf
#复制以下内容

#####-----------------------------配置文件start-------------------------------------
[client]
port=3306
socket=/tmp/mysql.sock

[mysqld]
character_set_server=utf8mb4
collation_server=utf8mb4_general_ci
init_connect='SET NAMES utf8mb4'
basedir=/home/docker/mysql
datadir=/home/docker/mysql/data
socket=/tmp/mysql.sock
pid-file=/home/docker/mysql/mysql.pid
log-error=/home/docker/mysql/logs/error.log
#慢查询日志
slow_query_log = 1
slow_query_log_file=/home/docker/mysql/logs/mysql-slow.log
#一般查询存储路径
general_log = 1
general_log_file=/home/docker/mysql/logs/mysql.log
#慢查询时间 超过1秒则为慢查询
long_query_time = 1 
#不区分大小写
lower_case_table_names=1
#绑定地址
bind-address=0.0.0.0
#0表示禁用缓存
query_cache_type=0
#设置Mysql的最大连接数
max-connections=100
#默认存储引擎
default-storage-engine = InnoDB
#当每进行1次事务提交之后，将数据写入磁盘。
sync_binlog=1
#当设为默认值1的时候，每次提交事务的时候，都会将log buffer刷写到日志。
innodb_flush_log_at_trx_commit=1
innodb_log_buffer_size = 2M
innodb_log_file_size = 32M
innodb_log_files_in_group = 3
innodb_max_dirty_pages_pct = 90
innodb_lock_wait_timeout = 120

log_bin=mysql_bin
binlog-format=Row
server-id=1

sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION
max_connections=5000
default-time_zone = '+8:00'
#####-----------------------------配置文件  end-------------------------------------


2.初始化
/home/docker/mysql/bin/mysqld --initialize --user=docker --basedir=/home/docker/mysql --datadir=/home/docker/mysql/data

3.随机密码
;av8TXHwA;dd

4.启动服务
/home/docker/mysql/bin/mysqld --defaults-file=/home/docker/mysql/my.cnf --user=docker >/dev/null 2>&1 &
//指定用户表明生成的数据访问权限

nohup 用于后台启动程序

>/dev/null
这条命令的作用是将标准输出1重定向到/dev/null中。/dev/null代表linux的空设备文件，所有往这个文件里面写入的内容都会丢失，俗称“黑洞”。那么执行了>/dev/null之后，标准输出就会不再存在，没有任何地方能够找到输出的内容。

2>&1
这条命令用到了重定向绑定，采用&可以将两个输出绑定在一起。这条命令的作用是错误输出将和标准输出同用一个文件描述符，说人话就是错误输出将会和标准输出输出到同一个地方。
linux在执行shell命令之前，就会确定好所有的输入输出位置，并且从左到右依次执行重定向的命令，所以>/dev/null 2>&1的作用就是让标准输出重定向到/dev/null中（丢弃标准输出），然后错误输出由于重用了标准输出的描述符，所以错误输出也被定向到了/dev/null中，错误输出同样也被丢弃了。执行了这条命令之后，该条shell命令将不会输出任何信息到控制台，也不会有任何信息输出到文件中。

停止服务
./mysqladmin -u avalon -p shutdown

5.登录
/home/docker/mysql/bin/mysql -u root -p

6.修改密码
alter user user() identified by "asdfasdf";

7.操作数据库
create database <数据库名>;
use <数据库名>;

8.用户
DROP USER 'username'@'host';//%表示任意地址
create user avalon@'%' identified by  'asdfasdf';
grant <privileges> on <databasename>.<tablename> to <username>@<host> with grant option;
revoke privilege on databasename.tablename from 'username'@'host';
例如：grant all on *.* to avalon@192.168.1.3;
grant all on *.* to avalon@'%';
set password for 'username'@'host' = password('newpassword');
flush privileges;

9.执行expect脚本之前需要现在expect解释器


 
